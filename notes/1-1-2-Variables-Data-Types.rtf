{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red251\green0\blue7;\red25\green60\blue255;\red251\green0\blue7;
\red25\green60\blue255;}
{\*\expandedcolortbl;;\cssrgb\c100000\c12195\c0;\cssrgb\c12594\c35385\c100000;\cssrgb\c100000\c12195\c0;
\cssrgb\c12594\c35385\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid1\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid3\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid101\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid201\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid202\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid301\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\vieww22520\viewh19080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs32 \cf0 1/24/21\
1-1-2: Step 1, Part 1, Section 2\

\f1\b0 DATA QUEST COURSE 1: Python for Data Science: Fundamentals
\f0\b \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b0 \cf0 Modules 1-2: 
\f3\b \ul Variables and Data Types
\f2\b0 \ulnone \
\pard\tx720\pardeftab560\slleading20\partightenfactor0
\cf0 \
0) Python has \cf2 4 primitive data types\cf0  \
	I\cf3 ntegers, Floats, Booleans, and Strings\cf0 \
- 6 Standard Data Types\
	-\cf3  Numbers, String, List, Tuple, Set, Dictionary\cf0 \
- note everything is an object in python (even ints, unlike in JS)\
\
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 1) \cf4 #\cf0  = single code comment\
\
\
2) 
\f3\b \cf4 **\cf0  
\f2\b0 = power of operator\
Example: \
	4**2		# 4^2\
\
3) \cf4 == \cf0 operator\
- evaluates if values are equal, NOT memory location (unlike in JS)\
- seems to work for multi nesting lists\
Example:\
	arr1 = [ [ \'91yo\'92 ], 2, 3 ]\
	arr2 = [ [ \'91yo\'92 ], 2, 3 ]\
	print(arr1 == arr2)		#=> true\
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\cf0 4) \cf4 **=\cf0  
\f3\b \ul Exponentiation Reassignment
\f2\b0 \ulnone  (same as JS)\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl2\cf0 Example:\
	yo = 4\
	yo **= 2              #=> 16 (4^2)\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl1\cf0 - Can only be used to update a variable (like in JS)\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\
5) Variable Naming\
- Like JS variable names can\'92t start with number\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 - Var names can\'92t use hyphens/special chars like in JS (Except underscore)\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\
6) Concatenating integer + float => float\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 	print(
\f3\b \cf5 type
\f2\b0 \cf0 (4 + 1.0))      #=> float\
\
\
7) Numeric Data Types\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 - 
\f3\b Int
\f2\b0  Ex. 4\
- 
\f3\b Float
\f2\b0  Ex. 4.0\
- Complex\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 - To declare a float or int, just add or don\'92t add a decimal\
\
\
8) Convert Float to Integer and vice versa\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1
\f3\b \cf0 \ul \ulc0 	\cf5 \ulnone int(4.6) 
\f2\b0 \cf0       #=> 4\
\ls3\ilvl1
\f3\b \ul 	\cf5 \ulnone float(4)
\f2\b0 \cf0        #=> 4.0\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 \
\
9) rounding numbers\
- Doesn\'92t mutate input\
Examples:\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0
\f3\b \cf0 	\cf5 round(4.5)
\f2\b0 \cf0        #=> 4\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0
\f3\b \cf0 \ul 	\ulnone round(4.6)
\f2\b0        #=> 5\
\
\
10) Strings (str type)\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 - double \'93\'94 or single \'91\'92 just like in JS\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 - 
\f3\b \cf4 \ul \ulc4 Escape character backslash \\
\f2\b0 \cf0 \ulnone  (just like in JS)\
Example:\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 	\'91Facebook\\\'92s old name was \'93the facebook\'94. \'92\
- 
\f3\b \cf4 \ul triple quote markets
\f2\b0 \cf0 \ulnone  \'93\'94\'94 or \'91\'92\'92\
	- allow us to write strings without suing the escape character for \'93 or \'91\
- \cf4 string values are IMMUTABLE!!!\cf0  (Just like in JS), will get an error if you try to update char in string (unlike in JS)\
\
\
11) multiplying / concatenating strings\
Example:\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 	\'93a\'94 * 2       #=> \'93aa\'94\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 - ^ would get Error in JS\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 	\'934\'94 + 1       #=> Error\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 ^would get \'9341\'94 in JS\
\
\
12) \cf4 str( num )\cf0  method\
- takes in num, returns new string representation of number\
Example:\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 	
\f3\b \cf5 str(4)
\f2\b0 \cf0           #=> \'934\'94\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl1\cf0 - Converts int or float to a string\
\
\
\
\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 QUESTIONS\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	\uc0\u8259 	}how many decimal points are stored in floats?\
{\listtext	\uc0\u8259 	}What if we wanted more decimals?\
}