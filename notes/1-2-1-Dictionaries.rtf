{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red251\green0\blue7;\red251\green0\blue7;}
{\*\expandedcolortbl;;\cssrgb\c100000\c12195\c0;\cssrgb\c100000\c12195\c0;}
\margl1440\margr1440\vieww17760\viewh19080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b\fs32 \cf0 7/14/21\
1-2-1: Step 1, Part 2, Section 1\
DATA QUEST COURSE 1: Python for Data Science: Fundamentals Part II\
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 Section 4: Dictionaries and Frequency Tables
\f2\b0 \
\pard\tx720\pardeftab560\slleading20\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 1) \cf2 Dictionary\
\cf0 - key/value store like in JS\
- keys can be strings, numbers, variables, booleans (Can\'92t use lists and dictionaries)\
- keys must be unique like JS\
- if key is boolean, key is converted to an integer (False -> 0, True -> 1)\
- values can be of any datatype\
- strings can be in single or double quotes like in JS\
Ex. \
	fruit = \{ \'91mangos\'92: 2,  \'91apples\'92:1, \'91pears\'92: 3 \}\
\
\
2) dictionary retrieval of values\
Ex.\
	fruit = \{ \'91mangos\'92: 2,  \'91apples\'92:1, \'91pears\'92: 3 \}\
	fruit[\'91mangoes\'92]				#=> 2\
\
\
3) 
\f3\i key
\f2\i0  \cf3 in\cf0  
\f3\i dictionary
\f2\i0  operator for dictionaries\
- returns Boolean, True if key is in dictionary\
Ex\
	fruit = \{ \'91mangos\'92: 2,  \'91apples\'92:1, \'91pears\'92: 3 \}\
	print( \'91apples\'92 in fruit)		#=> True\
\
\
4) Dot notation not inherently available in python to access dictionary key/values unlike in JS\
\
\
\
\
\
\
QUESTIONS\
- \
}